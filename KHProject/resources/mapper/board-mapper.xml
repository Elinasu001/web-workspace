<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="boardMapper">
	<!-- com.kh.java.board.model.vo.Board -->
	<!-- com/kh/java/member/common/vo/PageInfo  -->
	
	
	<sql id="boardList">
		SELECT
			   BOARD_NO	boardNo
			 , CATEGORY_NAME category
			 , USER_NAME boardWriter
			 , BOARD_TITLE boardTitle
			 , CREATE_DATE createDate
			 , COUNT
		 FROM
		       KH_BOARD
		 JOIN
	           KH_CATEGORY USING (CATEGORY_NO)
	     JOIN 
	           KH_MEMBER ON (BOARD_WRITER = USER_NO)
	    WHERE
	           KH_BOARD.STATUS = 'Y'
	</sql>
	
	
	
	<select id="selectListCount" resultType="_int">
		SELECT
		       COUNT(*)
		  FROM
		       KH_BOARD
		 WHERE
		       STATUS = 'Y'
		   AND
			   BOARD_TYPE = 1	
	</select>
	

	<select id="selectBoardList"  parameterType="pageinfo" resultType="board">
		SELECT
			   BOARD_NO	boardNo
			 , CATEGORY_NAME category
			 , USER_NAME boardWriter
			 , BOARD_TITLE boardTitle
			 , CREATE_DATE createDate
			 , COUNT
		 FROM
		       KH_BOARD
		 JOIN
	           KH_CATEGORY USING (CATEGORY_NO)
	     JOIN 
	           KH_MEMBER ON (BOARD_WRITER = USER_NO)
	    WHERE
	           KH_BOARD.STATUS = 'Y'
	      AND
	           BOARD_TYPE = 1
	    ORDER
	       BY     
	           BOARD_NO DESC
	   OFFSET #{offset} ROWS FETCH NEXT #{boardLimit} ROWS ONLY
	   		 
	</select>
	
	<select id="selectCategory" resultType="category">
		SELECT
		       CATEGORY_NO categoryNo
		     , CATEGORY_NAME categoryName
		 FROM    
		       KH_CATEGORY
		 ORDER
		    BY
		       CATEGORY_NO DESC
	</select>
	
	<!-- 일반게시판은 1 사진게시판은 2 -->
	<insert id="insertBoard1" parameterType="board">
		INSERT
		  INTO
		       KH_BOARD
		       (
		       BOARD_NO
		     , BOARD_TYPE
		     , CATEGORY_NO
		     , BOARD_TITLE
		     , BOARD_CONTENT
		     , BOARD_WRITER  
		       )
		VALUES
			   (
			   SEQ_BNO.NEXTVAL
			 , 1
			 , #{category}
			 , #{boardTitle}
			 , #{boardContent}
			 , #{boardWriter}  
			   )
	</insert>
	
	
	<!-- 방금 INSERT 된 BOARD_NO 의 시퀀스가 필요하다.-->
	<!-- 방법1. SEQ_BNO.CURRVAL : 가장 마지막에 성공적으로 만들어진 NEXTVAL 값을 줌(단, 접속한 사용자만(session) 사용하여 문제 발생 확률은 적지만 적합한 방법은 아님) -->
	<!-- 방법2. 서브쿼리(단, 적합한 방법은 아님) -->
	<!-- 왜 적합하지 않는가? CURRVAL은 세션단위로 관리 되는데  트랜잭션 단위나 실제 INSERT된 행 단위와 1:1로 매칭된다는 보장이 없다. 헷갈릴 수 있음. -->
	<!-- 왜 적합하지 않는가 ? 내가 INSERT한 값이 아니라, 다른 사용자가 방금 INSERT한 값일 수도 있다. -->
	<!-- 방법3. 권장되는 방법은 keyProperty, selectKey  -->
	<insert id="insertAttachment1" parameterType="board">
		INSERT
		  INTO
		       KH_ATTACHMENT
		       (
		       FILE_NO
		     , REF_BNO
		     , ORIGIN_NAME
		     , CHANGE_NAME
		     , FILE_PATH
		       )
		VALUES
		       (
			   SEQ_FNO.NEXTVAL
			 , SEQ_BNO.CURRVAL
			 , #{originName}
			 , #{changeName}
			 , #{filePath}
		       )
	</insert>
	
	
	<!-- 
		selectKey
		게시글 + 첨부파일 INSERT
		주문 + 주문상세 INSERT
		회원 + 권한 INSERT
	-->
	
	<!-- 권장 방법 : 
	[참고] : https://mybatis.org/mybatis-3/sqlmap-xml.html
	1) insert 하기 전에 selectKey 먼저 수행 
	2) 3개 속성 사용됨
		- resultType="Long"
		- board 객체 "boardNo" 필드에다가 대입
		- order : "BEFORE" 권장 사항 (select the key first)
	3) service에 at.setRefBno(board.getBoardNo()); 받아오기
	4) retu~ing 도 있다
	-->
	<insert id="insertBoard" parameterType="board">
		<!--  일반 게시글 가정으로 boardType이 있다 == 1 // 카테고리-->
		<selectKey resultType="Long" keyProperty="boardNo" order="BEFORE">
			SELECT SEQ_BNO.NEXTVAL FROM DUAL
		</selectKey>
		INSERT
		  INTO
		       KH_BOARD
		       (
		       BOARD_NO
		     , BOARD_TYPE
		     , CATEGORY_NO
		     , BOARD_TITLE
		     , BOARD_CONTENT
		     , BOARD_WRITER  
		       )
		VALUES
			   (
			   #{boardNo}
			 , 1
			 , #{category}
			 , #{boardTitle}
			 , #{boardContent}
			 , #{boardWriter}  
			   )
	</insert>
	
	
	<insert id="insertAttachment" parameterType="attachment">
		INSERT
		  INTO
		       KH_ATTACHMENT
		       (
		       FILE_NO
		     , REF_BNO
		     , ORIGIN_NAME
		     , CHANGE_NAME
		     , FILE_PATH
		       )
		VALUES
		       (
			   SEQ_FNO.NEXTVAL
			 , #{refBno}
			 , #{originName}
			 , #{changeName}
			 , #{filePath}
		       )
	</insert>
	
	
	<update id="increaseCount" parameterType="_int">
		UPDATE
		       KH_BOARD
		   SET
		       COUNT = COUNT + 1
		 WHERE
		       BOARD_NO = #{boardNo}
		   AND
		       STATUS = 'Y'
	</update>
	
	<!-- KH_CATEGORY : 카테고리 KH_MEMBER : 작성자 -->
	<select id="selectBoard" resultType="board" parameterType="_int">
		SELECT
		       BOARD_NO boardNo
		     , USER_NAME boardWriter
		     , CATEGORY_NAME category
		     , BOARD_TITLE boardTitle
		     , BOARD_CONTENT boardContent
		 FROM
		       KH_BOARD
		 LEFT
		 JOIN
		       KH_CATEGORY USING (CATEGORY_NO)
		 JOIN
		       KH_MEMBER ON (BOARD_WRITER = USER_NO)
		WHERE
		       KH_BOARD.STATUS = 'Y'
		  AND
		       BOARD_NO = #{boardNo}
	</select>
	
	<!-- 한 행만을 조회 -->
	
	<select id="selectAttachment" resultType="attachment" parameterType="_int">
		SELECT
		       FILE_NO fileNo
		     , ORIGIN_NAME originName
		     , CHANGE_NAME changeName
		     , FILE_PATH filePath
		 FROM
		       KH_ATTACHMENT
		WHERE
		       STATUS = 'Y'
		  AND
		       REF_BNO = #{boardNo}
		ORDER
		   BY
		       FILE_NO ASC
	</select>
	
	<!-- boardNo 는 있으니깐 boardWriter 땡겨오기 -> 로그인 사람만 게시판 수정 삭제 버튼 보여지기 위함 -->
	<select id="selectBoardWriter" resultType="long">
		SELECT
		       BOARD_WRITER
		  FROM
		       KH_BOARD
		 WHERE
		       BOARD_NO = #{boardNo}
	</select>
	
	<update id="deleteBoard" parameterType="board">
		UPDATE
		       KH_BOARD
		   SET
		       STATUS = 'N'
		 WHERE
		       BOARD_NO = #{boardNo}
		   AND
		       BOARD_WRITER = #{boardWriter}    
	</update>
	
	<update id="deleteAttachment" parameterType="long">
		UPDATE
		       KH_ATTACHMENT
		   SET
		       STATUS = 'N'
		 WHERE      
		       REF_BNO = #{boardNo}
	</update>
	
	<!-- board update -->
	
	<!-- boardNo : 사용자만 게시판 수정 -->
	<update id="updateBoard" parameterType="board">
		UPDATE
		       KH_BOARD
		   SET
		       BOARD_TITLE = #{boardTitle}
		     , BOARD_CONTENT = #{boardContent}
		     , CATEGORY_NO = #{category}
		 WHERE
		       BOARD_NO = #{boardNo}
		   AND
		       STATUS = 'Y'
		   AND
		       BOARD_WRITER = #{boardWriter}
	</update>
	
	<!-- fileNo : 파일 유무 -->
	<update id ="updateAttachment" parameterType="attachment">
		UPDATE
		       KH_ATTACHMENT
		   SET
		       ORIGIN_NAME = #{originName}
		     , CHANGE_NAME = #{changeName}
		     , FILE_PATH = #{filePath}
		 WHERE
		       FILE_NO = #{fileNo}
	</update>
	
	<!-- choose otherwise로 바꿔주는게 좋음 -->
	<select id="searchedCount" parameterType="hashmap" resultType="_int">
		select
		       count(*)
		  from
		       kh_board
	      join
	           kh_member on(board_writer = user_no)
     	 where
	           kh_board.status = 'Y'
	     <if test="condition == 'content'">
	     	and
	     	    board_content
	     </if>
	     <if test="condition == 'writer'">
	     	and
	     	    user_name
	     </if>
	     <if test="condition =='title'">
	     	and
	     	    board_title
	     </if>
	     like '%' || #{keyword} ||'%'
	</select>
	
	<select id="selectSearchList" resultType="board" parameterType="hashMap">
       <include refid="boardList"/>
       <choose>
       		<when test="condition == 'writer'">
       			AND USER_NAME
       		</when>
       		<when test="condition == 'title'">
       			AND BOARD_TITLE
       		</when>
       		<otherwise>
       			AND BOARD_CONTENT
       		</otherwise>
       </choose>
       		LIKE '%' || #{keyword} ||'%'
       	   ORDER
       	      BY
       	         BOARD_NO DESC
       	   OFFSET #{offset} ROWS FETCH NEXT #{limit} ROWS ONLY
	</select>
	
	<!-- 어디 게시글에 넣은 건지 게시글 번호를 넣어야 한다. -->
	<insert id="insertImageBoard" parameterType="board">
		<selectKey resultType="Long" keyProperty="boardNo" order="BEFORE">
			SELECT SEQ_BNO.NEXTVAL FROM DUAL
		</selectKey>
		INSERT
		  INTO
		       KH_BOARD
		       (
		       BOARD_NO
		     , BOARD_TYPE
		     , BOARD_TITLE
		     , BOARD_CONTENT
		     , BOARD_WRITER
		       )
	    VALUES
	           (
	           #{boardNo}
	         , 2
	         , #{boardTitle}
	         , #{boardContent}
	         , #{boardWriter}
	           )
	           
	</insert>
	
	<insert id="insertAttachmentList" parameterType="attachment">
		INSERT
		  INTO
		       KH_ATTACHMENT
		VALUES
		       (
		       SEQ_FNO.NEXTVAL
		     , #{refBno}
		     , #{originName}
		     , #{changeName}
		     , #{filePath}
		     , SYSDATE
		     , #{fileLevel}
		     , 'Y'
		       )
	</insert>
	
	<select id="selectImageList" resultType="imageboarddto">
		SELECT
			   BOARD_NO	boardNo
			 , BOARD_TITLE boardTitle
			 , COUNT
			 , FILE_PATH filePath
			 , CHANGE_NAME changeName
		 FROM
		       KH_BOARD
		 JOIN
	           KH_ATTACHMENT ON (REF_BNO = BOARD_NO)
	    WHERE
	           BOARD_TYPE = 2
	      AND
	           KH_BOARD.STATUS = 'Y'
	    ORDER
	       BY     
	           BOARD_NO DESC
	</select>
	
	
	
	<!-- <resultMap>은 하나의 SQL 조회 결과를 복잡한 객체 구조(DTO, VO)에 자동으로 매핑하기 위한 MyBatis의 기능 -->
	<!-- 연관 객체(1:N, N:1 관계)나 컬렉션(List, Set) 등을 처리할 때 진가를 발휘 -->
	<!-- 즉, 하나의 SQL로 여러 테이블을 조인한 결과를 한 번에 가져오고,  그 결과를 resultMap으로 객체 구조에 맞게 자동 매핑할 수 있다 -->
	<!--  사용하면 좋은 점은? dto에서 List에 댓글도 달리고... 다양한 기능들이 달릴 때마다 select 조회를 여러번 해야되는데 resultMap사용할 경우 조인만 잘 해놓고 resultMap 추가만 해주면 된다 ! -->
	<resultMap id="boardResultSet" type="boarddto">
		<id  property="boardNo" column="boardNo"/> <!-- pk -->
	    <result property="boardWriter" column="boardWriter"/>
		<result property="boardTitle" column="boardTitle"/>
		<result property="boardContent" column="boardContent"/>
		<collection property="files" ofType="attachment"> <!-- property="필드명" ofType="" -->
			<id property="fileNo" column="fileNo"/> <!-- pk -->
			<result property="changeName" column="changeName"/>
			<result property="filePath" column="filePath"/>
		</collection>
	</resultMap>
	<!-- board 관련, at 같이 조회, select는 parameterType 또는 resultMap , 다조회 x 하나만 조회(boardNo)-->
	<select id="selectBoardAndAttachment" parameterType="_long" resultMap="boardResultSet">
		SELECT
		       BOARD_NO boardNo
		     , BOARD_TITLE boardTitle
		     , BOARD_CONTENT boardContent
		     , USER_NAME boardWriter
		     , FILE_NO fileNo
		     , CHANGE_NAME changeName
		     , FILE_PATH filePath
		 FROM
		       KH_BOARD
		 JOIN
           	   KH_MEMBER ON (BOARD_WRITER = USER_NO)  <!-- 작성자 이름 조인 -->
     	 LEFT 
      	 JOIN
               KH_ATTACHMENT ON (BOARD_NO = REF_BNO)  <!-- 첨부파일 없을 때도 표시 -->
		WHERE
		       BOARD_NO = #{boardNo}
		ORDER
		   BY
		       FILE_NO ASC
	</select>
	
	
	<!-- 댓글작성 -->
	<insert id="insertReply" parameterType="reply">
		INSERT
		  INTO 
		       KH_REPLY
		  	   (
		  	   REPLY_NO
		  	 , REF_BNO
		  	 , REPLY_CONTENT
		  	 , REPLY_WRITER
		  	   )
		VALUES
		       (
		       SEQ_RNO.NEXTVAL
		     , #{refBno}
		     , #{replyContent}
		     , #{replyWriter}
		       )		  
	</insert>
	
	<!-- collection으로 가져 갈 수 있지만, 경우가 다르다. -->
	<select id="selectRely" resultType="reply">
		SELECT
		       REPLY_NO	replyNo
		     , REPLY_CONTENT replyContent
		     , USER_ID replyWriter
		     , CREATE_DATE createDate
		 FROM
		       KH_REPLY
	     JOIN
	           KH_MEMBER ON (REPLY_WRITER = USER_NO)
		WHERE
		       KH_REPLY.STATUS = 'Y'
		  AND
		       REF_BNO = #{boardNo}
		ORDER
		   BY 
		      createDate DESC
	</select>
	
</mapper>
<!-- 
KH_BOARD (게시판)
 ┌─────────────┐
 │ BOARD_NO(PK)│◀───────────────┐
 │ BOARD_TITLE │            │
 │ BOARD_WRITER│            │
 └─────────────┘            │
                            │
KH_ATTACHMENT(첨부파일)       │
 ┌─────────────┐            │
 │ FILE_NO(PK) │            │
 │ REF_BNO(FK) ├────────────┘
 │ ORIGIN_NAME │
 │ CHANGE_NAME │
 │ FILE_PATH   │
 └─────────────┘
BOARD_NO = REF_BNO 관계로 1:N (게시글 하나 ↔ 여러 첨부파일) 구조

BOARD_NO가 시퀀스로 생성되는데, 이 번호를 첨부파일의 REF_BNO에도 써야 하기 때문입니다.

order="BEFORE" → INSERT 하기 전에 시퀀스 값을 먼저 가져와서 객체(board)의 boardNo에 세팅.

이렇게 해야 at.setRefBno(board.getBoardNo())로 같은 게시글 번호를 첨부파일에 연결할 수 있습니다.
 -->
